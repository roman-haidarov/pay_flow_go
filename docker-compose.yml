version: '3.8'

x-logging: &log-env
  driver: "${LOG_DRIVER:-local}"
  options:
    max-size: "${LOG_MAX_SIZE:-128m}"
    max-file: "${LOG_MAX_FILES:-2}"

x-app-base: &app-base
  image: golang:${GO_VERSION:-1.25}
  working_dir: /app
  command: ["go", "run", "./cmd"]
  volumes:
    - .:/app
  restart: unless-stopped
  logging: *log-env
  env_file:
    - .env

services:
  app:
    <<: *app-base
    # depends_on: [jaeger, kafka, redis]
    depends_on: [jaeger, kafka]
    cpus: "${APP_CPUS:-0.90}"
    mem_limit: "${APP_MEM:-512m}"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    environment:
      - REDIS_URL=${REDIS_URL:-}
      - GOMEMLIMIT=${APP_GOMEMLIMIT:-430MiB}
      - GOGC=${GOGC:-100}
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092

  jaeger:
    image: jaegertracing/all-in-one:1.56
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "4318:4318"
    restart: unless-stopped
    logging: *log-env

  kafka:
    image: apache/kafka:3.7.0
    container_name: broker
    hostname: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      KAFKA_LISTENERS: "PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_DEFAULT_REPLICATION_FACTOR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_NUM_PARTITIONS: "1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    restart: unless-stopped
    logging: *log-env
    volumes:
      - kafka_data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on: [kafka]
    ports:
      - "9020:8080"  # UI: http://localhost:9020
    environment:
      AUTH_TYPE: DISABLED
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092
    restart: unless-stopped
    logging: *log-env

  # redis:
  #   image: redis:7-alpine
  #   environment:
  #     - REDIS_RAM_SIZE=${REDIS_RAM_SIZE:-256}
  #   command: >
  #     redis-server --appendonly yes
  #                  --maxmemory ${REDIS_RAM_SIZE:-256}mb
  #                  --maxmemory-policy allkeys-lru
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   logging: *log-env

volumes:
  kafka_data:
  # redis_data:

# UIs:
# http://localhost:16686 jaeger UI
# - Kafka UI:             http://localhost:9020
# Bootstrap:
# - с хоста:              localhost:9092 (TCP)
# - из контейнеров:       broker:29092

## Heald java.nio.file.AccessDeniedException
# docker compose down -v --remove-orphans
# docker compose run --rm --user root kafka sh -lc ' rm -rf /tmp/kraft-combined-logs/* /var/lib/kafka/data/* 2>/dev/null || true mkdir -p /tmp/kraft-combined-logs /var/lib/kafka/data chmod 1777 /tmp/kraft-combined-logs ls -ld /tmp/kraft-combined-logs /var/lib/kafka/data '
